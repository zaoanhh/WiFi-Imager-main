var documenterSearchIndex = {"docs":
[{"location":"read_csv/","page":"-","title":"-","text":"Modules = [CSV2CSI]\nOrder   = [:function, :type]","category":"page"},{"location":"preprocessing/","page":"-","title":"-","text":"Modules = [PreProcessing]\nOrder   = [:function, :type]","category":"page"},{"location":"preprocessing/#Main.PreProcessing.getLinearEquation-NTuple{4, Any}","page":"-","title":"Main.PreProcessing.getLinearEquation","text":"getLinearEquation(p1x, p1y, p2x, p2y)\n\nReturns the coefficients of a straight line.\n\nArguments:\n\np1x: The x coordinate of the first point on the line.\np1y: The y coordinate of the first point on the line.\np2x: The x coordinate of the second point on the line.\np2y: The y coordinate of the second point on the line.\n\nReturns:\n\nThe coefficients of the straight line, a b c, where ax + by + c = 0.\n\n\n\n\n\n","category":"method"},{"location":"preprocessing/#Main.PreProcessing.get_csiabs2_and_scatter-Tuple{Any, Any, Any, Any, ConstantParameter, Any}","page":"-","title":"Main.PreProcessing.get_csiabs2_and_scatter","text":"get_csi_and_label(material_names, material_labels, rectangle_pos, folder,parameters::ConstantParameter,selected_freq_index; tx_num=4, rx_num=40,sample_num=10,window_size=100)\n\nRead the label from the xlsx file and get the CSI data. The size of CSI data is (rxnum, txnum, freqnum, samplenum).\n\n\n\n\n\n","category":"method"},{"location":"preprocessing/#Main.PreProcessing.get_dis_between_a_point_and_a_line-Tuple{Any, Any, Any}","page":"-","title":"Main.PreProcessing.get_dis_between_a_point_and_a_line","text":"get_dis_between_a_point_and_a_line(point, line_point1, line_point2)\n\nReturns the distance between a point and a straight line. With a line is ax + by + c = 0, the distance is ax + by + c sqrta^2 + b^2.\n\nArguments:\n\npoint: The coordinates of the point, x y.\nline_point1: The coordinates of the first point on the line, x y.\nline_point2: The coordinates of the second point on the line, x y.\n\nline_point1 and line_point2 is used to calculate straight-line equations, getLinearEquation(p1x, p1y, p2x, p2y).\n\nReturns:\n\nThe distance between the point and the line.\n\n\n\n\n\n","category":"method"},{"location":"forward/","page":"-","title":"-","text":"Modules = [MoMForward]\nOrder   = [:function, :type]","category":"page"},{"location":"forward/#Main.MoMForward.find_grids_with_object-Tuple{Main.MoMForward.ConstantParameter, Any}","page":"-","title":"Main.MoMForward.find_grids_with_object","text":"find_grids_with_object(config, scatter; bacground_permittivity = 1.0)\n\nWe find the position in the matrix and the of coordinates the scatter grid, whose complex permittivity is not equal to that of the background.\n\nArguments\n\nconfig::ConstantParameter: The structure of the configuration.\nscatter::Array: The permittivity of the object and background, which is a 2D array of booleans.\n\nKeyword Arguments\n\nbacground_permittivity::Float64: The permittivity of the background, which is 1.0 by default.\n\nReturns\n\nscatter_positions_in_matrix::Array: The position in the matrix of the scatter grid.\nscatter_centroids::Array: The coordinates of the scatter grid\n\n\n\n\n\n","category":"method"},{"location":"forward/#Main.MoMForward.ConstantParameter","page":"-","title":"Main.MoMForward.ConstantParameter","text":"ConstantParameter(;\nfreq,\ndoi_size_x,\ndoi_size_y,\ngrid_number_x,\ngrid_number_y,\nR_tx,\nR_rx,\ntx_num,\nrxs_num\n)\n\nConstruct a structure based on the frequency of the input, including the following parameters:\n\nϵ₀ is the permittivity of free space.\nμ₀ is the permeability of free space.\nc is the speed of light in free space.\nλ is the wavelength.\nf is the frequency.\nω is the angular frequency.\nk₀ is the wave number in the vacuum.\nη is the intrinsic impedance of free space.\nconstant1 is a constant factor, which is μ₀ / (4 * pi).\nconstant2 is a constant factor, which is -1im / (4 * pi * ω * ϵ₀).\ndoi_size_x is the size of the DOI in the x direction.\ndoi_size_y is the size of the DOI in the y direction.\ngrid_number_x is the number of grids in the x direction.\ngrid_number_y is the number of grids in the y direction.\ngrid_num is the total number of grids, which is grid_number_x * grid_number_y.\ngrid_radius is the radius of a circle with the same area as the grid.\ngrid_xs is the x coordinates of the grids.\ngrid_ys is the y coordinates of the grids.\ntxs_pos is the position of the transmitters, whose size is [2, tx_num].\nrxs_pos is the position of the receivers, whose size is [2, rxs_num].\ntx_num is the number of transmitters.\nrxs_num is the number of receivers.\n\nKeyword Arguments\n\nfreq::Float64: The frequency of the input.\ndoi_size_x::Float64: The size of the DOI in the x direction.\ndoi_size_y::Float64: The size of the DOI in the y direction\ngrid_number_x::Int64: The number of grids in the x direction.\ngrid_number_y::Int64: The number of grids in the y direction.\nR_tx: The radius of the transmitter circle.\nR_rx: The radius of the receiver circle.\ntx_num: The number of transmitters.\nrxs_num: The number of receivers.\n\n\n\n\n\n","category":"type"},{"location":"#WiFi-Imager","page":"WiFi-Imager","title":"WiFi-Imager","text":"","category":"section"},{"location":"","page":"WiFi-Imager","title":"WiFi-Imager","text":"This is the mandatory index.md file that is the homepage of the documentation.","category":"page"},{"location":"","page":"WiFi-Imager","title":"WiFi-Imager","text":"Here the documentation string of a function is expanded:","category":"page"},{"location":"#Subsection-name","page":"WiFi-Imager","title":"Subsection name","text":"","category":"section"},{"location":"","page":"WiFi-Imager","title":"WiFi-Imager","text":"Test.","category":"page"},{"location":"inverse/","page":"-","title":"-","text":"Modules = [SVDInverse]\nOrder   = [:function, :type]","category":"page"},{"location":"inverse/#Main.SVDInverse.GD-Tuple{Any, Any}","page":"-","title":"Main.SVDInverse.GD","text":"GD(J, Z)\n\nWe calculate the Green's function of the domain using the inverse Fourier transform. G_D J is GD(J, Z), where Z is given by get_GD_Z.\n\n\n\n\n\n","category":"method"},{"location":"inverse/#Main.SVDInverse.get_GD_Z-Tuple{ConstantParameter}","page":"-","title":"Main.SVDInverse.get_GD_Z","text":"get_GD_Z(config::ConstantParameter)\n\n\n\n\n\n","category":"method"},{"location":"inverse/#Main.SVDInverse.shared_variables_for_save-Tuple{Any}","page":"-","title":"Main.SVDInverse.shared_variables_for_save","text":"shared_variables_for_save(shared_variables_config)\n\n\n\n\n\n","category":"method"}]
}
